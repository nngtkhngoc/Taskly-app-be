generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TaskStatus {
  NOT_DONE
  COMPLETED
  OVERDUE
}

model task {
  id         String     @id @default(cuid())
  name       String
  note       String?
  category   String[]
  importance String
  urgency    String
  deadline   DateTime
  status     TaskStatus @default(NOT_DONE)
  created_at DateTime   @default(now())

  user    user   @relation(fields: [user_id], references: [id])
  user_id String

  subtasks subtask[]
  reminder reminder?
}

model reminder {
  id         String   @id @default(cuid())
  time       DateTime
  created_at DateTime @default(now())

  task    task   @relation(fields: [task_id], references: [id])
  task_id String @unique
}

model notification {
  id         String   @id @default(cuid())
  content    String
  created_at DateTime @default(now())
  is_checked Boolean  @default(false)

  user    user?   @relation(fields: [user_id], references: [id])
  user_id String?
}

model subtask {
  id           String   @id @default(cuid())
  name         String
  is_completed Boolean  @default(false)
  created_at   DateTime @default(now())

  task    task   @relation(fields: [task_id], references: [id])
  task_id String
}

model dailyTaskRecord {
  date            DateTime @id @db.Date
  completed_tasks Int

  user    user   @relation(fields: [user_id], references: [id])
  user_id String
}

model badge {
  id             String @id @default(cuid())
  name           String
  icon           String
  description    String
  level_required Int

  users user[]
}

model level {
  id          String @id @default(cuid())
  name        String
  xp_required Int

  users user[]
}

model user {
  id         String    @id @default(cuid())
  email      String    @unique
  password   String
  created_at DateTime  @default(now())
  xp         Int       @default(0)
  streaks    Int       @default(0)
  last_login DateTime? @default(now())

  tasks             task[]
  badges            badge[]
  notifications     notification[]
  daily_task_record dailyTaskRecord[]

  level   level?  @relation(fields: [levelId], references: [id])
  levelId String?
}
